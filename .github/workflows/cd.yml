name: CD migrated from Jenkins file

on:
  repository_dispatch:
    types: [deploy]


jobs:
  send-to-pipeline:
    name: Initiate Coveo Deployment Pipeline

    runs-on: [coveo, linux, x64, ec2]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: coveo/search-ui
          ref: release/${{ github.event.client_payload.version }}
          fetch-depth: 0

      - name: Setup Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Verify Node.js installation
        run: |
          node --version
          npm --version

      - name: Setup Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt

      - name: Verify Python installation
        run: |
          python --version
          pip --version

      - name: Install npm
        run: npm install

      - name: Build package
        shell: bash
        run: |
          npm run injectVersion
          npm run build
          npm run minimize

      - name: Install Chrome
        shell: bash
        run: |
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
          echo 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main' | tee /etc/apt/sources.list.d/google-chrome.list
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
          google-chrome --version

      - name: Run tests (except accessibility-tests)
        #on tag -> run accessibilityTests
        run: |
          npm run unitTests
          npm run validateTypeDefinitions

      - name: Run accessibility tests (if tag)
        if: startsWith(github.ref, 'refs/tags/')
        shell: bash
        run: |
          if [[ "$GITHUB_REF" == refs/tags/* ]]; then
            npm run accessibilityTests
          fi

      - name: Run DocSiteMap
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          npm run docsitemap

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_USERNAME: ${{ secrets.GITHUB_USERNAME }}
        shell: bash
        run: |
          npm run zipForGitReleases
          node ./build/github-release.deploy.js

      - name: Deploy
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        shell: bash
        run: |
          node ./build/npm.deploy.js
          node ./build/deployment-pipeline.deploy.js

#  slack-notifications:
#    needs: build
#    steps:
#      - name: Notify
#        uses: coveo-platform/actions/slack-notify@main
#        with:
#          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
#          channel-id: 'searchuibuilds'
#          status: 'up'
